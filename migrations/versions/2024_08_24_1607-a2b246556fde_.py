"""empty message

Revision ID: a2b246556fde
Revises: 
Create Date: 2024-08-24 16:07:15.930616

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a2b246556fde'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cities',
    sa.Column('id', sa.SmallInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_cities'))
    )
    op.create_table('metro_stations',
    sa.Column('id', sa.SmallInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('color', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_metro_stations'))
    )
    op.create_table('search_links',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('search_link', sa.Text(), nullable=False),
    sa.Column('source_name', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_search_links'))
    )
    op.create_table('users',
    sa.Column('id', sa.Uuid(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    op.create_table('cities_metro_stations',
    sa.Column('id', sa.SmallInteger(), autoincrement=True, nullable=False),
    sa.Column('city_id', sa.SmallInteger(), nullable=False),
    sa.Column('metro_station_id', sa.SmallInteger(), nullable=False),
    sa.ForeignKeyConstraint(['city_id'], ['cities.id'], name=op.f('fk_cities_metro_stations_city_id_cities'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['metro_station_id'], ['metro_stations.id'], name=op.f('fk_cities_metro_stations_metro_station_id_metro_stations'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_cities_metro_stations'))
    )
    op.create_table('users_search_links',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('search_link_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['search_link_id'], ['search_links.id'], name=op.f('fk_users_search_links_search_link_id_search_links'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_users_search_links_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users_search_links'))
    )
    op.create_index(op.f('ix_users_search_links_search_link_id'), 'users_search_links', ['search_link_id'], unique=True)
    op.create_table('parsing_results',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('user_search_link_id', sa.BigInteger(), nullable=False),
    sa.Column('city_metro_station_id', sa.SmallInteger(), nullable=True),
    sa.Column('direct_link', sa.Text(), nullable=False),
    sa.Column('listed_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('housing_type', sa.Text(), nullable=False),
    sa.Column('flat_room_type', sa.SmallInteger(), nullable=False, comment='-1 - дом, 0 - студия'),
    sa.Column('floor', sa.String(length=5), nullable=False),
    sa.Column('flat_area', sa.Float(), nullable=False),
    sa.Column('price', sa.BigInteger(), nullable=False),
    sa.Column('commission_percent', sa.SmallInteger(), nullable=False),
    sa.Column('deposit_percent', sa.SmallInteger(), nullable=False),
    sa.ForeignKeyConstraint(['city_metro_station_id'], ['cities_metro_stations.id'], name=op.f('fk_parsing_results_city_metro_station_id_cities_metro_stations')),
    sa.ForeignKeyConstraint(['user_search_link_id'], ['users_search_links.id'], name=op.f('fk_parsing_results_user_search_link_id_users_search_links'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_parsing_results'))
    )
    op.create_index('ix_parsing_results_floor_flat_area', 'parsing_results', ['floor', 'flat_area'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_parsing_results_floor_flat_area', table_name='parsing_results')
    op.drop_table('parsing_results')
    op.drop_index(op.f('ix_users_search_links_search_link_id'), table_name='users_search_links')
    op.drop_table('users_search_links')
    op.drop_table('cities_metro_stations')
    op.drop_table('users')
    op.drop_table('search_links')
    op.drop_table('metro_stations')
    op.drop_table('cities')
    # ### end Alembic commands ###
