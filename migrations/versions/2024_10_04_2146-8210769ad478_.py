"""empty message

Revision ID: 8210769ad478
Revises: 
Create Date: 2024-10-04 21:46:00.096075

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8210769ad478'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('search_links',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('search_type', sa.SmallInteger(), nullable=False),
    sa.Column('search_link', sa.Text(), nullable=False),
    sa.Column('source_name', sa.Text(), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_search_links'))
    )
    op.create_table('users',
    sa.Column('id', sa.Uuid(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    op.create_table('users_search_links',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('search_link_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['search_link_id'], ['search_links.id'], name=op.f('fk_users_search_links_search_link_id_search_links'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_users_search_links_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users_search_links'))
    )
    op.create_index(op.f('ix_users_search_links_search_link_id'), 'users_search_links', ['search_link_id'], unique=True)
    op.create_table('users_telegrams',
    sa.Column('telegram_id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_users_telegrams_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('telegram_id', name=op.f('pk_users_telegrams'))
    )
    op.create_table('parsing_results',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('user_search_link_id', sa.BigInteger(), nullable=False),
    sa.Column('direct_link', sa.Text(), nullable=False),
    sa.Column('price', sa.BigInteger(), nullable=False),
    sa.Column('commission_percent', sa.SmallInteger(), nullable=True),
    sa.Column('deposit_percent', sa.SmallInteger(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_search_link_id'], ['users_search_links.id'], name=op.f('fk_parsing_results_user_search_link_id_users_search_links'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_parsing_results'))
    )
    op.create_index(op.f('ix_parsing_results_direct_link'), 'parsing_results', ['direct_link'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_parsing_results_direct_link'), table_name='parsing_results')
    op.drop_table('parsing_results')
    op.drop_table('users_telegrams')
    op.drop_index(op.f('ix_users_search_links_search_link_id'), table_name='users_search_links')
    op.drop_table('users_search_links')
    op.drop_table('users')
    op.drop_table('search_links')
    # ### end Alembic commands ###
